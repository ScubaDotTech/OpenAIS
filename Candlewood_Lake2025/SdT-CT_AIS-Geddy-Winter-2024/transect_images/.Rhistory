library(tidyverse)
library(tidycensus)
library(ggplot2)
library(datasets)
library(gt)
library(readr)
library(stringr)
library(webexercises)
library(dplyr)
library(scales)
library(patchwork)
library(cowplot)
library(viridis)
library(stargazer)
setwd("~/Dropbox/PSCI1800/Data/Raw")
getwd()
d <- read_csv("ProjectsForMap.csv")
total_population_20 <- get_decennial(
geography = "county",
variables = "P1_001N",
year = 2020,
geometry = T,
sumfile = "pl")
#census county pop
v16 <- load_variables(2022, "acs5", cache = TRUE)
total_population_20 <- get_decennial(
geography = "county",
variables = "P1_001N",
year = 2020,
geometry = T,
sumfile = "pl")
total_population_20 <- as.data.frame(total_population_20)
total_population_20 <- total_population_20 %>%
select(NAME, value)
counties <- map_data("county")
d <- d %>%
mutate(County = tolower(County),
State = tolower(State),
`Funding Amount` = as.character(`Funding Amount`)
)
joint <- d %>%
filter(!is.na(`Funding Amount`)) %>%
left_join(counties, by = c("County" = "subregion", "State" = "region")) %>%
filter((!is.na(`Funding Amount`)) & (`Funding Source` != "BIL") & (`Funding Source` != "CHIPS")) %>%
mutate(
`Funding Amount` = ifelse(`Funding Amount` == "TBD", 0, `Funding Amount`),
`Funding Amount` = as.numeric(`Funding Amount`),
) %>%
group_by(group) %>%
mutate(fund_sum = sum(`Funding Amount`), rm.na = T)
clim <- read_csv("YCOM7_publicdata.csv")
clim
clim <- clim %>%
filter(geotype == "county")
county_list <- unique(clim$geoname[clim$geotype == "county"])
separate_county_state <- function(county_state) {
state <- str_extract(county_state, "(?<=, ).+")
county <- str_remove(str_extract(county_state, "^[^,]+"), " (County|Parish)")
return(c(county = county, state = state))
}
clean_list <- tibble(
og = county_list,
cleaned_county = sapply(county_list, function(x) separate_county_state(x)["county"]),
cleaned_state = sapply(county_list, function(x) separate_county_state(x)["state"])
)
clim_county <- clim %>%
filter(geotype == "county") %>%
select(rebates, geoname, prioritycleanenergy) %>%
right_join(clean_list, by = c("geoname" = "og")) %>%
mutate(cleaned_county = tolower(cleaned_county),
cleaned_state = tolower(cleaned_state),
rebate_energy = (rebates + prioritycleanenergy)/2) %>%
full_join(counties, by = c("cleaned_state" = "region", "cleaned_county" = "subregion" ))
clim_county
full_data <- clim_county %>%
full_join(
joint %>% select(fund_sum, `Funding Amount`, `Funding Source`),
by = "group"
) %>%
left_join(
total_population_20 %>% select(NAME, value),
by = c("geoname" = "NAME")
) %>%
group_by(geoname) %>%
mutate(fund_density = fund_sum/value)
map_data <- full_data %>%
filter(!is.na(fund_density))
plot1 <- ggplot() +
geom_polygon(data = clim_county, aes(x = long, y = lat, group = group, fill = rebate_energy)) +
geom_polygon(data = counties, aes(x = long, y = lat, group = group),
fill = NA, color = "black", size = 0.1) +
scale_fill_gradient(
low = "orange",
high = "darkgreen",
name = "%Support for Green Energy",
limits = c(45, 90)
) +
coord_quickmap() + xlab("") + ylab("") +
labs(title = "Public Support for Green Energy", subtitle = "Yale Climate Opinion Maps (2024). Yale Program on Climate Change Communication") +
theme(
legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_text(size = 14),
plot.title = element_text(size = 16, face = "bold"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank()
)
plot2 <- ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = log(fund_density))) +
geom_polygon(data = counties, aes(x = long, y = lat, group = group),
fill = NA, color = "black", size = 0.1) +
scale_fill_viridis_c(
option = "viridis",
limits = c(log(1), log(500000000)),
breaks = c(log(1), log(500), log(3000), log(12000), log(450000000)),
labels = c("1", "   5h        ", "   3k   ", "       12k", "   450k"),
name = "Funding Per Person ($USD)"
) +
coord_quickmap() + xlab("") + ylab("") +
labs(title = "Inflation Reduction Act Investment Per Capita", subtitle = "Invest.gov (2024). Investing in America Map. White House") +
theme(
legend.position = "bottom",
legend.text = element_text(size = 12),
legend.title = element_text(size = 14),
plot.title = element_text(size = 16, face = "bold"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank()
)
legend1 <- get_legend(plot1)
legend_plot <- plot_grid(
legend1, legend2,
ncol = 2,
rel_widths = c(0.5, 0.5),
labels = c("Percentage Support for Green Energy", "Funding"),
label_size = 12
)
filtered_data <- full_data %>%
distinct(geoname, .keep_all = TRUE) %>%
mutate(fund_density = ifelse(is.na(fund_density), 0, fund_density))
filtered_data
length(unique(filtered_data$geoname))
length(unique(is.na(filtered_data$fund_density)))
zero_data <- filtered_data %>%
filter(fund_density > 0)
regression <- lm(fund_density ~ rebate_energy, data = filtered_data)
no_zero_regression <- lm(fund_density ~ rebate_energy, data = zero_data)
stargazer(
regression, no_zero_regression,
type = "html",
style = "ajps",
title = "Regression Results",
column.labels = c("All Counties", "Only Funded Counties"),
dep.var.labels = c("Dependent Variable"),
covariate.labels = c("Constant", "Energy Metric"),
order = c("Constant", "rebate_energy"),
digits = 3,
report = "vcsp",
align = TRUE,
out = "combined_regression.html"
)
View(total_population_20)
View(d)
View(clim)
View(clean_list)
?function
??function
help(function)
#setwd("/Users/tianyizhou/Library/CloudStorage/Box-Box/RESTORE Ghana CDI/data")
knitr::opts_knit$set("~/Dropbox/devlab/restore_econ/data/")
setwd("~/Dropbox/devlab/restore_econ/data/")
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
library(tidyverse)
library(sf)
library(matrixStats)  # For doing fast rowwise operations
library(terra)
library(readxl)
setwd("~/Dropbox/devlab/restore_econ/data")
?root.dir
#setwd("/Users/tianyizhou/Library/CloudStorage/Box-Box/RESTORE Ghana CDI/data")
knitr::opts_knit$set("~/Dropbox/devlab/restore_econ/data")
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
getwd()
setwd("~/Dropbox/devlab/restore_econ/data")
getwd()
setwd("~/Dropbox/devlab/restore_econ/data")
knitr::opts_knit$set(root.dir = "~/Dropbox/devlab/restore_econ/data")
```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = "~/Dropbox/devlab/restore_econ/data")
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stringr)
library(maps)
library(sf)
library(readr)
setwd("~/Dropbox")
setwd("~/Dropbox/devlab/kiln_detect/")
border <- st_read("real_aoi.geojson")
setwd("~/Dropbox/devlab/restore_econ/data")
setwd("~/Dropbox/devlab/restore_econ/data")
setwd("~/Dropbox/devlab/restore_econ/data")
#setwd("/Users/tianyizhou/Library/CloudStorage/Box-Box/RESTORE Ghana CDI/data")
knitr::opts_knit$set("~/Dropbox/devlab/restore_econ/data")
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
library(tidyverse)
library(sf)
library(matrixStats)  # For doing fast rowwise operations
library(terra)
library(readxl)
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
setwd("~/Dropbox/devlab/restore_econ/data/")
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
setwd("~/Dropbox/devlab/restore_econ/data")
getwd()
library(tidyverse)
library(sf)
library(matrixStats)  # For doing fast rowwise operations
library(terra)
library(readxl)
#setwd("/Users/tianyizhou/Library/CloudStorage/Box-Box/RESTORE Ghana CDI/data")
#knitr::opts_knit$set("~/Dropbox/devlab/restore_econ/data")
setwd("~/Dropbox/devlab/restore_econ/data")
getwd()
#from mapping_villages https://upenn.box.com/s/litrbhpepodoikiu9k6i613jyugav60m
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
#from mapping_villages https://upenn.box.com/s/litrbhpepodoikiu9k6i613jyugav60m
getwd()
setwd("~/Dropbox/devlab/restore_econ/data")
villages <- st_read("geo data/Sui Communities") %>%
st_zm %>% st_transform(crs=4326) %>%
rename(name = COMMUNITY, program = RESTORE) %>%
mutate(
program = case_when(
name == "Asantekrom" ~ "RESTORE",  # Per 11 Mar email from Carly
program == "Yes" ~ "RESTORE",
program == "No" ~ "P4F"
)
) %>%
dplyr::select(name, geometry, program) %>%
filter(!is.na(program)) %>%
# Exclude the 3 villages identified in 11 March 2024 email from Carly
filter(!(name %in% c("Ahwiam","Asanteman","Asiekrom"))) %>%
# Include the 2 new villages (the 3rd villages was P4F)
add_row(
name = "Adumtankwa", program = "RESTORE",
geometry = st_point(c(-2.662329, 6.342071)) %>% st_sfc(crs = 4326)
) %>%
add_row(
name = "Bakonka", program = "RESTORE",
geometry = st_point(c(-2.419294, 6.311370)) %>% st_sfc(crs = 4326)
)
final_village <- read_xls("geo data/final_village_sample_FIELDGPS.xls")
final_village <- st_as_sf(final_village, coords = c("gpslongitude", "gpslatitude"),
crs = 4326, agr = "constant")
# Tree cover loss, 2001-2023
# https://storage.googleapis.com/earthenginepartners-hansen/GFC-2023-v1.11/download.html
lossyear <- rast(
"geo data/Hansen/Hansen_GFC-2023-v1.11_lossyear_10N_010W.tif"
)
# Tree cover in the year 2010
# https://glad.umd.edu/Potapov/TCC_2010/
treecover2010 <- rast("geo data/Hansen/treecover2010_10N_010W.tif")
buffer_ha = list()
tc2010_30_ha = list()
loss5_ha = list()
loss10_ha = list()
tc2010_30_pct = list()
loss5_pct = list()
loss10_pct = list()
for (i in 1:nrow(final_village)) {
buffer_sf <- final_village %>%
slice(i) %>%
st_buffer(3000)
buffer <- vect(buffer_sf)
# -----------------------------------------------------------------------------
# Mask the rasters to their intersections with buffer_utm
lossyear_mask <- lossyear %>%
crop(buffer) %>%
mask(buffer)
treecover2010_mask <- treecover2010 %>%
crop(buffer) %>%
mask(buffer)
# -----------------------------------------------------------------------------
# Recode the treecover raster so it's a "greater than or equal to 30" raster
tc2010_30 <- ifel(treecover2010_mask >= 30, 1,NA)
# -----------------------------------------------------------------------------
# Recode 2 versions of the lossyear raster for 5-year and 10-year loss
loss5 = ifel((lossyear_mask >= 19) & (lossyear_mask <= 23), 1,NA)
loss10 = ifel((lossyear_mask >= 14) & (lossyear_mask <= 23), 1,NA)
# -----------------------------------------------------------------------------
# Total buffer area in hectares
buffer_ha_i <- treecover2010_mask %>% expanse(unit="ha") %>% .$area
buffer_ha[[i]] <- buffer_ha_i
# -----------------------------------------------------------------------------
# Total area covered by each of the 3 rasters
tc2010_30_ha_i <- tc2010_30 %>% expanse(unit="ha") %>% .$area
tc2010_30_ha[[i]] <- tc2010_30_ha_i
loss5_ha_i <- loss5 %>% expanse(unit="ha") %>% .$area
loss5_ha[[i]] <- loss5_ha_i
loss10_ha_i <- loss10 %>% expanse(unit="ha") %>% .$area
loss10_ha[[i]] <- loss10_ha_i
# -----------------------------------------------------------------------------
# Area percentages
tc2010_30_pct[[i]] <- 100 * (tc2010_30_ha_i / buffer_ha_i)
loss5_pct[[i]] <- 100 * (loss5_ha_i / buffer_ha_i)
loss10_pct[[i]] <- 100 * (loss10_ha_i / buffer_ha_i)
}
GFW_stats <- cbind(as.numeric(buffer_ha),
as.numeric(tc2010_30_ha),
as.numeric(loss5_ha),
as.numeric(loss10_ha),
as.numeric(tc2010_30_pct),
as.numeric(loss5_pct),
as.numeric(loss10_pct))
colnames(GFW_stats) = c("buffer_ha",
"tc2010_30_ha",
"loss5_ha",
"loss10_ha",
"tc2010_30_pct",
"loss5_pct",
"loss10_pct")
GFW_stats_RESTORE <- sf:::cbind.sf(final_village,
GFW_stats)
View(GFW_stats_RESTORE)
ggplot()+
geom_sf(data = GFW_stats_RESTORE)
setwd("~/Dropbox/Scuba.Tech/SdT-CT_AIS-Geddy-Winter-2024/transect_data")
View(loss10)
setwd("~/Dropbox/devlab/restore_econ/data")
getwd()
setwd("~/Dropbox/devlab/restore_econ/data")
getwd()
library(tidyverse)
library(sf)
library(matrixStats)  # For doing fast rowwise operations
library(terra)
library(readxl)
#setwd("/Users/tianyizhou/Library/CloudStorage/Box-Box/RESTORE Ghana CDI/data")
#knitr::opts_knit$set("~/Dropbox/devlab/restore_econ/data")
setwd("~/Dropbox/devlab/restore_econ/data")
getwd()
getwd()
read_xls("geo data/final_village_sample_FIELDGPS.xls")
village_sample <- read_xls("geo data/final_village_sample_FIELDGPS.xls")
View(final_village)
ggplot()+
geom_sf(data = village_sample)
View(village_sample)
ggplot()+
geom_polygon(data = village_sample, x = gps_lattitude, y = gps_longitude)
ggplot()+
geom_polygon(data = village_sample, x = gps_latitude, y = gps_longitude)
